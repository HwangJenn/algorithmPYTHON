# 정수 X에 사용할 수 있는 연산은 1. X가 3으로 나누어 떨어지면, 3으로 나눈다. 2. X가 2로 나누어 떨어지면, 2로 나눈다. 3.1을 뺀다.
# 정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서 1을 만들려고 한다. 연산을 사용하는 횟수의 최솟값을 출력하시오.
# 입력 첫째 줄 -> 1보다 크거나 같고, 10의 6제곱보다 작거나 같은 정수 N이 주어진다.
# 출력 첫째 줄 -> 연산을 하는 횟수의 최솟값을 출력한다.

# 전의 결과를 다음 결과에 이용하게 하는 점화식을 활용했다.
# x = 10 인 경우, 10 - 9 - 3 - 1 과정을 거쳐 1이된다
# 9 일때는 또 0 - 3 - 1의 과정을 거친다.
# 3 일 때는 3 - 1의 과정을 거친다.
# 앞애서 구한 결과값을 저장했다가 후에 사용한다.
# 2와 3으로 나누어 떨어지지 않는 경우는 무조건 1을 빼야 하기 때문에 dp[i] = dp[i - 1] + 1을 통해 횟수를 +1 추가하는것을 반복해 최솟값을 구한다.

n = int(input()) #입력 받은 n
dp = [0] * (n + 1) #점화식

for i in range(2, n + 1): #나누기 할 범위 설정
    dp[i] = dp[i - 1] + 1 #2와 3으로 나누어 떨어지지 않는 경우는 무조건 1을 빼야하기에 횟수 추가한다. 2와 3으로 나누어 떨어지는 경우에는 1을 빼는 것 보다 나누어 떨어지는게 이득

    if i % 2 == 0: #2로 나누어 떨어질때
        dp[i] = min(dp[i], dp[i//2] + 1)
    if i % 3 == 0: #3으로 나누어 떨어질때
        dp[i] = min(dp[i], dp[i//3] + 1)

print(dp[n]) #for문에서 나온 최솟값