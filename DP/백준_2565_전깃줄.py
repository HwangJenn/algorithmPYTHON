# 두 전봇대 A와 B 사이 허너 듈씩 전깃줄을 추가하되 전깃줄이 교차해서 합선하지 않게 히기 위해 잘라내야 하는 죄소 전깃줄의 개수는?
# 입력 첫쨰줄 -> 두 전봇대 사이의 100 이하의 전깃줄의 개수. 입력 둘쨰줄 ~ -> 전깃줄이 연결되는 A전봇대 B전봇대 번호
# 출력 첫쨰줄 -> 남아있는 모든 전깃줄이 서로 교차하지 않게 하기 위해 없애야 하는 전깃줄의 최소 개수

# A의 번호가 작은 순서대로 정렬하고 B번호가 첫번째 전깃줄의 B번호 보다 작다면 교차한다.
# 따라서 A번호가 작은 순서대로 정렬하고 앞순서가 B가 윗순서의 B보다 작은 경우가 최대로 이어지는 경우를 찾는다.

n = int(input()) #입력받을 전깃줄의 개수
list = [] #전깃줄 연결번호 정렬[]
dp = [1] * n #dp카운트

for i in range(n): #전깃줄개수만큼 반복
    a, b = map(int, input().split()) #입력받을 전봇대 번호
    list.append([a, b]) #리스트로 정렬

list.sort()

for i in range(1, n):
    for j in range(0, i):
        if list[j][1] < list[i][1]: #뒷순서가 더 크면
            dp[i] = max(dp[i], dp[j] + 1) #dp 카운팅

print(n - max(dp))